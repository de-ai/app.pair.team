#!/bin/bash


#-- project root's where package.json is
proj_path=$(pwd)
bin_dir=${proj_path}/bin
cfg_path=${proj_path}/wip_rc

branch_name="wip/mh-`date +%Y%m%d`"


# cfg=[ ! -z `ls` ]
# printf "Loading config: %s [%s]\n" "${cfg_path}" "$cfg"

# #-- start off getting config from rc file
# if [ -f "$cfg_path" ]; then 
# 	source $cfg_path
# 	branch_name="wip/${WIP_PREFIX}-${WIP_TIME}"

# else 
# 	branch_name="wip/`whoami`-${WIP_TIME}"
# fi

#-- check for 'develop' branch
if [[ ! -z "`git branch | grep develop`" ]]; then

	#-- not on 'develop'
	if [[ -z "`git branch | grep '* develop'`" ]]; then

		#-- no changes
		if [[ -z "`git status | grep clean`" ]]; then git checkout develop
		else
			printf "Uncommitted changes, commit 'em, then try again.\n"
			exit 0;
		fi
	fi

else
	printf "No develop branch for this repo.\n"
	exit 0;
fi

printf "Branching to '%s'...\n" "${branch_name}"

#-- make new wip branch
if [[ -z "`git branch | grep ${branch_name}`" ]]; then
	git checkout -b "${branch_name}"

else #-- suffix index onto branch name if already one
	ind=$(( `git branch | grep ${branch_name} | wc -l | awk '{print $NF}'`+1 ))
	git checkout -b "${branch_name}.${ind}"

	if [[ ! -z "`git status | grep clean`" ]]; then 
		printf "Adding all files...\n"
		git add . 
	fi
fi


#-- show remote + status
echo ; git config --get remote.origin.url ; git status


#-- terminate w/o error
exit 0;
